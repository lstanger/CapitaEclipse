CLASS zcl_ce_ps_cats_project DEFINITION
  PUBLIC
  FINAL
  CREATE PUBLIC .

  PUBLIC SECTION.

    INTERFACES if_rap_query_provider .
  PROTECTED SECTION.
  PRIVATE SECTION.
ENDCLASS.



CLASS ZCL_CE_PS_CATS_PROJECT IMPLEMENTATION.


  METHOD if_rap_query_provider~select.

*
**    TRY.
**
**      NEW zcl_ps_cats_project_rfc(  )->zif_xa_rfc~select_from_rap_query_provider( EXPORTING io_request = io_request io_response = io_response ).
**
**      CATCH cx_rfc_dest_provider_error INTO DATA(lx_dest).
**
**        RAISE EXCEPTION TYPE zxa_sys_rap_provider_exception
**          EXPORTING
**            textid   = zxa_sys_rap_provider_exception=>destination_provider_error
**            previous = lx_dest.
**
**    ENDTRY.
*
*    DATA: lt_projects TYPE TABLE OF zce_ps_cats_project,
*          ls_project  TYPE zce_ps_cats_project,
*          et_projects TYPE TABLE OF zce_ps_cats_project.
*
*
*    TRY.
*        DATA(lo_instance) = zcl_xa_sys_helper=>get_instance(  ).
*
*        " Get the ECC on-premise destination
*        DATA(lv_destination_new)  = lo_instance->get_sap_onpremise_destination(  ).
*
*        IF io_request IS BOUND.
*          " Map the OData request parameters to the FM importing/table objects
*          lo_instance->map_rap_io_request_params( EXPORTING io_request = io_request
*                                                  IMPORTING es_pagination = DATA(ls_pagination)
*                                                            et_filters = DATA(lt_filter)
*                                                            et_parameters = DATA(lt_parameters)
*                                                            et_requested_elements = DATA(lt_requested_elements)
*                                                            et_sort = DATA(lt_sort)
*                                                            ev_search_expression = DATA(lv_search_expression) ).
*        ENDIF.
*
*      CATCH cx_rfc_dest_provider_error INTO DATA(lx_dest).
*
*        RAISE EXCEPTION TYPE zxa_sys_rap_provider_exception
*          EXPORTING
*            textid   = zxa_sys_rap_provider_exception=>destination_provider_error
*            previous = lx_dest.
*
*    ENDTRY.
*
*
*    LOOP AT lt_filter ASSIGNING FIELD-SYMBOL(<fs_filter>).
*      LOOP AT <fs_filter>-single_select ASSIGNING FIELD-SYMBOL(<fs_single_select>).
*        IF <fs_single_select>-range IS NOT INITIAL.
*          CASE <fs_single_select>-name.
*            WHEN 'PROJECTID'.
*              IF lines( <fs_single_select>-range ) GT 1.
*                DATA(lr_id_range) = <fs_single_select>-range.
*              ELSE.
*                ls_project-projectid = <fs_single_select>-range[ 1 ]-low.
*              ENDIF.
*            WHEN 'PROJECTDEFINITION'.
*              ls_project-projectdefinition = <fs_single_select>-range[ 1 ]-low.
*            WHEN 'PROJECTSHORTDESCRIPTION'.
*              ls_project-ProjectShortDescription = <fs_single_select>-range[ 1 ]-low.
*          ENDCASE.
*        ENDIF.
*      ENDLOOP.
*
**      Is the project already loaded?
*      IF ls_project-projectid IS NOT INITIAL OR lr_id_range IS NOT INITIAL.
*        zcl_ps_cats_assignment_week=>get_instance( )->get_corresponding_tables(
*          IMPORTING
*            et_project = lt_projects
*        ).
*        IF ls_project-projectid IS NOT INITIAL.
*          DELETE lt_projects WHERE projectid NE ls_project-projectid.
*        ELSEIF lr_id_range IS NOT INITIAL.
*          DELETE lt_projects WHERE projectid NOT IN lr_id_range.
*        ENDIF.
*        IF lt_projects IS NOT INITIAL.
*          APPEND LINES OF lt_projects TO et_projects.
*          CONTINUE.
*        ENDIF.
*      ENDIF.
*
**      If we got here we didn't find the project details so need to read them from SAP
**      TODO project search and
*
**      ls_project-ProjectDefinition = 'E-008765'.
**      ls_project-ProjectShortDescription = 'Project 1'.
**      APPEND ls_project TO lt_projects.
*
*    ENDLOOP.
*
*    IF io_request->is_data_requested(  ).
*      io_response->set_data( et_projects ).
*    ENDIF.
*
*    IF ( io_request->is_total_numb_of_rec_requested(  ) ).
*      io_response->set_total_number_of_records( lines( et_projects ) ).
*    ENDIF.
  ENDMETHOD.
ENDCLASS.